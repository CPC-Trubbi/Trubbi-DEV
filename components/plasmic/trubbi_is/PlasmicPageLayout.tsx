// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: viWxjihD78B5cQSNFM9rw3
// Component: --ZfzNn8OC
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import MainHeader from "../../MainHeader"; // plasmic-import: SSE4essENl/component
import SocialIcons from "../../SocialIcons"; // plasmic-import: ifuek07_pM/component
import Footer from "../../Footer"; // plasmic-import: 042Y1f-_kh/component

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_trubbi_is.module.css"; // plasmic-import: viWxjihD78B5cQSNFM9rw3/projectcss
import * as sty from "./PlasmicPageLayout.module.css"; // plasmic-import: --ZfzNn8OC/css

import TrubbiMyndmerkiAndhverfasvgIcon from "../trubbi_library/icons/PlasmicIcon__TrubbiMyndmerkiAndhverfasvg"; // plasmic-import: qjCCCln2A/icon
import IconAwesomeFacebookFsvgIcon from "../trubbi_library/icons/PlasmicIcon__IconAwesomeFacebookFsvg"; // plasmic-import: qAdIjQfNiV/icon
import IconAwesomeInstagramsvgIcon from "../trubbi_library/icons/PlasmicIcon__IconAwesomeInstagramsvg"; // plasmic-import: 5WL9UWXccu/icon
import IconAwesomeTwittersvgIcon from "../trubbi_library/icons/PlasmicIcon__IconAwesomeTwittersvg"; // plasmic-import: byFY0Hzc7R/icon
import IconAwesomeLinkedinInsvgIcon from "../trubbi_library/icons/PlasmicIcon__IconAwesomeLinkedinInsvg"; // plasmic-import: L-EHWHz59l/icon

export type PlasmicPageLayout__VariantMembers = {
  transpHeader: "transpHeader";
};

export type PlasmicPageLayout__VariantsArgs = {
  transpHeader?: SingleBooleanChoiceArg<"transpHeader">;
};

type VariantPropType = keyof PlasmicPageLayout__VariantsArgs;
export const PlasmicPageLayout__VariantProps = new Array<VariantPropType>(
  "transpHeader"
);

export type PlasmicPageLayout__ArgsType = {
  pageContent?: React.ReactNode;
};

type ArgPropType = keyof PlasmicPageLayout__ArgsType;
export const PlasmicPageLayout__ArgProps = new Array<ArgPropType>(
  "pageContent"
);

export type PlasmicPageLayout__OverridesType = {
  root?: p.Flex<"div">;
  mainHeader?: p.Flex<typeof MainHeader>;
  pageContent?: p.Flex<"div">;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultPageLayoutProps {
  pageContent?: React.ReactNode;
  transpHeader?: SingleBooleanChoiceArg<"transpHeader">;
  className?: string;
}

function PlasmicPageLayout__RenderFunc(props: {
  variants: PlasmicPageLayout__VariantsArgs;
  args: PlasmicPageLayout__ArgsType;
  overrides: PlasmicPageLayout__OverridesType;
  dataFetches?: PlasmicPageLayout__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        defaultcss.all,
        projectcss.all,
        projectcss.root_reset,
        sty.root
      )}
    >
      <MainHeader
        data-plasmic-name={"mainHeader"}
        data-plasmic-override={overrides.mainHeader}
        className={classNames("__wab_instance", sty.mainHeader, {
          [sty.mainHeader__transpHeader]: hasVariant(
            variants,
            "transpHeader",
            "transpHeader"
          )
        })}
        slot={
          <SocialIcons
            className={classNames("__wab_instance", sty.socialIcons__oUnvW)}
            negative={"negative" as const}
          >
            <p.PlasmicLink
              className={classNames(defaultcss.a, projectcss.a, sty.link__zad4)}
              component={Link}
              href={"https://www.facebook.com/trubbimusic" as const}
              platform={"nextjs"}
            >
              <IconAwesomeFacebookFsvgIcon
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.svg__jgben
                )}
                role={"img"}
              />
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                sty.link__hAGnW
              )}
              component={Link}
              href={"https://www.instagram.com/trubbimusic/" as const}
              platform={"nextjs"}
            >
              <IconAwesomeInstagramsvgIcon
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.svg___7UPnL
                )}
                role={"img"}
              />
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                sty.link__hpf1A
              )}
              component={Link}
              href={"https://twitter.com/trubbimusic" as const}
              platform={"nextjs"}
            >
              <IconAwesomeTwittersvgIcon
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.svg__dnny0
                )}
                role={"img"}
              />
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                sty.link__cgnkk
              )}
              component={Link}
              href={"https://www.linkedin.com/company/trubbimusic/" as const}
              platform={"nextjs"}
            >
              <IconAwesomeLinkedinInsvgIcon
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.svg__ov0Sy
                )}
                role={"img"}
              />
            </p.PlasmicLink>
          </SocialIcons>
        }
      >
        <p.PlasmicLink
          className={classNames(defaultcss.a, projectcss.a, sty.link__ssAA)}
          component={Link}
          href={"/" as const}
          platform={"nextjs"}
        >
          <TrubbiMyndmerkiAndhverfasvgIcon
            className={classNames(
              defaultcss.all,
              projectcss.all,
              sty.svg__zpWrI
            )}
            role={"img"}
          />
        </p.PlasmicLink>
      </MainHeader>

      <div
        data-plasmic-name={"pageContent"}
        data-plasmic-override={overrides.pageContent}
        className={classNames(defaultcss.all, projectcss.all, sty.pageContent)}
      >
        {p.renderPlasmicSlot({
          defaultContents: null,
          value: args.pageContent
        })}
      </div>

      <Footer
        data-plasmic-name={"footer"}
        data-plasmic-override={overrides.footer}
        className={classNames("__wab_instance", sty.footer)}
        slot={
          <React.Fragment>
            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__ylipN
              )}
              component={Link}
              href={"/thjonustur" as const}
              platform={"nextjs"}
            >
              {"Þjónustur"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__pRVx
              )}
              component={Link}
              href={"/um-trubba" as const}
              platform={"nextjs"}
            >
              {"Um Okkur"}
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                defaultcss.__wab_text,
                sty.link__dl3ED
              )}
              component={Link}
              href={"/gott-ad-vita" as const}
              platform={"nextjs"}
            >
              {"Gott að vita"}
            </p.PlasmicLink>
          </React.Fragment>
        }
        slot3={
          <SocialIcons
            className={classNames("__wab_instance", sty.socialIcons___2EPp9)}
            negative={"negative" as const}
          >
            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                sty.link__yMnRi
              )}
              component={Link}
              href={"https://www.facebook.com/trubbimusic" as const}
              platform={"nextjs"}
            >
              <IconAwesomeFacebookFsvgIcon
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.svg__kiz9D
                )}
                role={"img"}
              />
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                sty.link__zpupE
              )}
              component={Link}
              href={"https://www.instagram.com/trubbimusic/" as const}
              platform={"nextjs"}
            >
              <IconAwesomeInstagramsvgIcon
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.svg__sYrzc
                )}
                role={"img"}
              />
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(
                defaultcss.a,
                projectcss.a,
                sty.link__zwKeA
              )}
              component={Link}
              href={"https://twitter.com/trubbimusic" as const}
              platform={"nextjs"}
            >
              <IconAwesomeTwittersvgIcon
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.svg__zuHCk
                )}
                role={"img"}
              />
            </p.PlasmicLink>

            <p.PlasmicLink
              className={classNames(defaultcss.a, projectcss.a, sty.link__pVH1)}
              component={Link}
              href={"https://www.linkedin.com/company/trubbimusic/" as const}
              platform={"nextjs"}
            >
              <IconAwesomeLinkedinInsvgIcon
                className={classNames(
                  defaultcss.all,
                  projectcss.all,
                  sty.svg___4Iavd
                )}
                role={"img"}
              />
            </p.PlasmicLink>
          </SocialIcons>
        }
      >
        <p.PlasmicLink
          className={classNames(
            defaultcss.a,
            projectcss.a,
            defaultcss.__wab_text,
            sty.link__tNa2G
          )}
          component={Link}
          href={"/skilmalar" as const}
          platform={"nextjs"}
        >
          {"Skilmálar"}
        </p.PlasmicLink>

        <p.PlasmicLink
          className={classNames(
            defaultcss.a,
            projectcss.a,
            defaultcss.__wab_text,
            sty.link__ekLhq
          )}
          component={Link}
          href={"/personuverndastefna" as const}
          platform={"nextjs"}
        >
          {"Persónuverndastefna"}
        </p.PlasmicLink>
      </Footer>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "mainHeader", "pageContent", "footer"],
  mainHeader: ["mainHeader"],
  pageContent: ["pageContent"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  mainHeader: typeof MainHeader;
  pageContent: "div";
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicPageLayout__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicPageLayout__VariantsArgs;
    args?: PlasmicPageLayout__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicPageLayout__Fetches;
  } & Omit<PlasmicPageLayout__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicPageLayout__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicPageLayout__ArgProps,
      internalVariantPropNames: PlasmicPageLayout__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicPageLayout__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicPageLayout";
  } else {
    func.displayName = `PlasmicPageLayout.${nodeName}`;
  }
  return func;
}

export const PlasmicPageLayout = Object.assign(
  // Top-level PlasmicPageLayout renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    mainHeader: makeNodeComponent("mainHeader"),
    pageContent: makeNodeComponent("pageContent"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicPageLayout
    internalVariantProps: PlasmicPageLayout__VariantProps,
    internalArgProps: PlasmicPageLayout__ArgProps
  }
);

export default PlasmicPageLayout;
/* prettier-ignore-end */
